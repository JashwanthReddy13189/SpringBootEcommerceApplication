spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}

  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  cloud:
    stream:
      bindings:
        createOrder-out-0:
          destination: order.exchange
          content-type: application/json
      kafka:
        binder:
          brokers: kafka:9092

#      rabbit:
#        bindings:
#          createOrder-out-0:
#            producer:
#              routing-key-expression: '''order.tracking'''

#  rabbitmq:
#    host: ${RABBITMQ_HOST:localhost}
#    port: ${RABBITMQ_PORT:5672}
#    username: ${RABBITMQ_USERNAME:guest}
#    password: ${RABBITMQ_PASSWORD:guest}
#    virtual-host: ${RABBITMQ_VHOST:guest}
#    connection-timeout: 30000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

#rabbitmq:
#  exchange:
#    name: order.exchange
#  queue:
#    name: order.queue
#  routing:
#    key: order.tracking

server:
  port: 8084

#logging:
#  file:
#    name: logs/order-service.log
#  logback:
#    rollingpolicy:
#      max-file-size: 5MB
#      max-history: 7

message: "Hey Jashwanth"

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

# circuit breaker setup
resilience4j:
  circuitbreaker:
    instances:
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
  retry:
    instances:
      retryBreaker:
        maxAttempts: 5
        waitDuration: 500ms
  ratelimiter:
    instances:
      rateLimiter:
        timeout-duration: 0
        limit-refresh-period: 4s
        limit-for-period: 2