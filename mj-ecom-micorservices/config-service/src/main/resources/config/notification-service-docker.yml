spring:
#  rabbitmq:
#    host: ${RABBITMQ_HOST:localhost}
#    port: ${RABBITMQ_PORT:5672}
#    username: ${RABBITMQ_USERNAME:guest}
#    password: ${RABBITMQ_PASSWORD:guest}
#    virtual-host: ${RABBITMQ_VHOST:guest}
#    connection-timeout: 30000
  kafka:
    bootstrap-servers: kafka:9092

  cloud:
    function:
      definition: orderCreated
    stream:
      function:
        definition: orderCreated
      bindings:
        orderCreated-in-0:
          destination: order.exchange
          group: notification-group
          content-type: application/json
      kafka:
        binder:
          brokers: kafka:9092

  mail:
    host: smtp.gmail.com
    port: 587
    username: noreply.jashwanthreddy@gmail.com
    password: saki klmf ofri frol
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

#rabbitmq:
#  exchange:
#    name: order.exchange
#  queue:
#    name: order.queue
#  routing:
#    key: order.tracking

server:
  port: 8086

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
    register-with-eureka: true
    fetch-registry: true