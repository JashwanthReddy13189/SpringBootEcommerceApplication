spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/order
    username: jashuu
    password: jashuu
    driver-class-name: org.postgresql.Driver

  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:guest}
    connection-timeout: 30000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    sampling:
      probability: 1.0

rabbitmq:
  exchange:
    name: order.exchange
  queue:
    name: order.queue
  routing:
    key: order.tracking

server:
  port: 8084

logging:
  file:
    name: logs/order-service.log
  logback:
    rollingpolicy:
      max-file-size: 5MB
      max-history: 7

message: "Hey Jashwanth"

# circuit breaker setup
resilience4j:
  circuitbreaker:
    instances:
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
  retry:
    instances:
      retryBreaker:
        maxAttempts: 5
        waitDuration: 500ms
  ratelimiter:
    instances:
      rateLimiter:
        timeout-duration: 0
        limit-refresh-period: 4s
        limit-for-period: 2